# Dockerfile for development environment
#
# Primary purpose is for use with VSCode DevContainer Extension.
#
# To build a docker image manually from this file run the commands,
#
# docker build . --tag phgasnets-dev
#
# NOTE: This file is not intended for running source-code but only to setup dependencies!
#

FROM debian:12-slim

ARG USERNAME=user
ARG USER_UID=1001
ARG USER_GID=${USER_UID}

ARG HIGHFIVE_PATH=/opt/highfive
ARG HIGHFIVE_TAG="v2.9.0"
ARG HIGHFIVE_GIT="https://github.com/BlueBrain/HighFive.git"

#   make user
RUN addgroup --gid ${USER_GID} ${USERNAME} && \
    adduser --disabled-password --gecos '' --uid ${USER_UID} --gid ${USER_GID} ${USERNAME} && \
    usermod --uid ${USER_UID} --gid ${USER_GID} ${USERNAME} && \
    # update package database
    apt-get update && \
    # set timezone within container
    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata && \
    # install C++ dependencies from apt
    apt-get install -y build-essential cmake git pkg-config \
        libeigen3-dev libceres-dev nlohmann-json3-dev libhdf5-dev && \
    # install highfive - not available in apt
    mkdir -p ${HIGHFIVE_PATH}-src && cd ${HIGHFIVE_PATH}-src && \
    git init && git remote add origin ${HIGHFIVE_GIT} && \
    git fetch --depth 1 origin tag ${HIGHFIVE_TAG} && \
    git checkout --quiet ${HIGHFIVE_TAG} && \
    cmake -B build -S . \
        -DHIGHFIVE_USE_EIGEN=On \
        -DCMAKE_INSTALL_PREFIX=${HIGHFIVE_PATH} \
        -DHIGHFIVE_USE_BOOST=Off \
        -DHIGHFIVE_EXAMPLES=Off \
        -DHIGHFIVE_UNIT_TESTS=Off \
        -DHIGHFIVE_BUILD_DOCS=Off && \
    cmake --build build --parallel && \
    cmake --install build && \
    rm -rf ${HIGHFIVE_PATH}-src && \
    # install python dependencies for plotting
    apt-get install -y python3 python3-pip python3-numpy python3-matplotlib python3-h5py && \
    # install latin modern fonts for plots
    apt-get install -y fonts-lmodern fontconfig && \
    mkdir -p /usr/local/share/fonts/otf && cd /usr/local/share/fonts/otf && \
    ln -s /usr/share/texmf/fonts/opentype/public/lm-math/latinmodern-math.otf && fc-cache

USER ${USERNAME}

ENV SHELL /bin/bash